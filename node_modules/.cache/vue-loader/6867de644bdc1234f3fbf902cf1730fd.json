{"remainingRequest":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/src/views/curso/Tema4.vue?vue&type=template&id=4c0c0fbe&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/src/views/curso/Tema4.vue","mtime":1741907822535},{"path":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Matematica_Financiera/U2_Matematica_Financiera/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}